import { GoogleGenerativeAI } from '@google/generative-ai';

if (!process.env.GEMINI_API_KEY) {
  throw new Error('GEMINI_API_KEY is required in .env');
}

const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);

export async function generatePortrait(quizData) {
  const { build, height, species, furColor, eyeColor, definingFeature, typicalExpression, treasuredItem, preferredClothing } = quizData;
  
  const colorType = furColor;
  
  const prompt = `Full body portrait of a ${build} ${height} ${species} vagabond. They have ${colorType} fur and ${eyeColor} eyes. Their most defining feature is ${definingFeature}. Their typical expression is ${typicalExpression}. They are wearing ${preferredClothing} and carrying ${treasuredItem}. In the vibrant, storybook art style of Kyle Ferrin's Root board game, textured and expressive.`;
  
  const model = genAI.getGenerativeModel({ model: "gemini-2.5-flash-image-preview" });
  
  const result = await model.generateContent([prompt]);
  const response = await result.response;
  
  const imagePart = response.candidates[0].content.parts[0];
  if (imagePart.inlineData) {
    const imageBase64 = imagePart.inlineData.data;
    return { prompt, imageBase64 };
  } else {
    throw new Error('No image generated by Gemini');
  }
}
